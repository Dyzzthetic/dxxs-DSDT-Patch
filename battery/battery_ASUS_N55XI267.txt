#Maintained by: dxxs for: 派奇
#battery_ASUS_K42JZ-N43SN.txt

# version(版本): 1.0
# Update Time(更新时间) : initial version, 初始版本

# initial work by dxxs 2014-06-22, 由 dxxs 制作 

# works for: 针对
#  ASUS N55XI267

# Tip: If you get a 0% battery status,you should also patch the Rehabman's "Fix Mutex with non-zero SyncLevel" patch.
# You also can patch the both of your computer's battery patch and the Rehabman's patch at one time.

# 注意：如果打过电量补丁后，有获取的电池状态显示为0%的情况，还需要打 Rehabman的 “Fix Mutex with non-zero SyncLevel” 补丁。
# 你也可以，一次性打好 自己电脑的电量补丁 和 Rehabman 的那个补丁。

# ==== Field devide 字段拆分 ====
#TAH0
into device label EC0 code_regex TAH0,\s+16, replace_matched begin TAHA,8,TAHB,8, end;
#TAH1
into device label EC0 code_regex TAH1,\s+16, replace_matched begin TAHC,8,TAHD,8, end;
#B0SN
into device label EC0 code_regex B0SN,\s+16, replace_matched begin B0SM,8,B0SN,8, end;
#B1SN
into device label EC0 code_regex B1SN,\s+16 replace_matched begin B1SM,8,B1SN,8 end;

# ==== Replace called method 替换调用方法 ====
#TAH0
into method label TACH code_regex TAH0 replaceall_matched begin B1B2(TAHA,TAHB) end;
#TAH1
into method label TACH code_regex TAH1 replaceall_matched begin B1B2(TAHC,TAHD) end;
#B0SN
into method label BIFA code_regex B0SN replaceall_matched begin B1B2(B0SM,B0SN) end;
#B1SN
into method label BIFA code_regex B1SN replaceall_matched begin B1B2(B1SM,B1SN) end;
#BDAT
into method label SMBR code_regex \sBDAT replaceall_matched begin RECB(0x1C,256) end;
into method label SMBR code_regex \(BDAT replaceall_matched begin (RECB(0x1C,256) end;
into method label SMBW code_regex \sBDAT replaceall_matched begin RECB(0x1C,256) end;
into method label ECSB code_regex \sBDAT replaceall_matched begin RECB(0x1C,256) end;
into method label ECSB code_regex \(BDAT replaceall_matched begin (RECB(0x1C,256) end;
#BDA2
into method label ECSB code_regex \sBDA2 replaceall_matched begin RECB(0x44,256) end;
into method label ECSB code_regex \(BDA2 replaceall_matched begin (RECB(0x44,256) end;

# ==== Data handling method 数据处理方法 ====
# utility methods to read/write buffers from/to EC
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized)\n
{\n
Return(Or(Arg0, ShiftLeft(Arg1, 8)))\n
}\n
end;